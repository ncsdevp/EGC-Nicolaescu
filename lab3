Temă - Lab 03
Care este ordinea de desenare a vertex-urilor pentru aceste metode (orar sau anti-orar)? Desenați axele de coordonate din aplicația - template folosind un singur apel GL.Begin().

   Un vertex este un punct de pe suprafața unui model în care se întâlnesc două sau mai multe linii folosite în reprezentarea corpului respectiv.
   Ordinea de desenare a vertex-urilor este în sens anti-orar.

GL.LineWidth(1.0f);
GL.Begin(PrimitiveType.Lines);
GL.Vertex2(x, y);
GL.Vertex2(x2, y2);
GL.End();

Ce este anti-aliasing? Prezentați această tehnică pe scurt.
   
   Antialiasing-ul este o tehnică utilizată în imagistica digitală pentru a reduce defectele vizuale care apar atunci când imaginile de înaltă rezoluție sunt prezentate cu o rezoluție mai mică. Aliasingul se manifestă sub formă de linii zimțate sau în trepte (de altfel, cunoscute sub numele de zimțări) pe margini și obiecte, care altfel ar trebui să fie netede.
   Antialiasing-ul face ca aceste linii curbate sau înclinate să fie netede prin adăugarea unei ușoare decolorări la marginile liniei sau obiectului, ceea ce face ca marginile zimțate să se estompeze și să se topească împreună. Dacă imaginea este mărită puțin, ochiul uman nu mai poate observa o ușoară decolorare pe care o creează antialiasing-ul.

Care este efectul rulării comenzii GL.LineWidth(float)? Dar pentru GL.PointSize(float)? Funcționează în interiorul unei zone GL.Begin()?

   GL.LineWidth(float) specifică lățimea rasterizată atât a liniilor cu alias, cât și a liniilor fără alias.
   GL.PointSize(float) specifică diametrul rasterizat atât al punctelor cu alias, cât și a punctelor fără alias.
   Nu este permisă apelarea funcțiilor GL.LineWidth() și GL.PointSize(float) în interiorul unei zone GL.Begin()/GL.End(), deoarece în interiorul acestei zone este permisă doar specificarea coordonatelor vertex-urilor.




• Care este efectul utilizării directivei LineLoop atunci când desenate segmente de dreaptă multiple în OpenGL?

   LineLoop desenează o linie dreaptă la următorul vertex și conectează ultimul vertex înapoi la primul.

• Care este efectul utilizării directivei LineStrip atunci când desenate segmente de dreaptă multiple în OpenGL?

   LineStrip desenează o linie dreaptă către următorul vertex.

• Care este efectul utilizării directivei TriangleFan atunci când desenate segmente de dreaptă multiple în OpenGL?

   TriangleFan economisește timp de stocare și procesare și descrie un set de triunghiuri conectate, care împart un vertex central (triunghiuri cu o latură comună în formă de evantai).

• Care este efectul utilizării directivei TriangleStrip atunci când desenate segmente de dreaptă multiple în OpenGL?

   TriangleStrip este un subset de triunghiuri într-o meșă triunghiulară cu vertex-uri partajate (triunghiuri cu o latură comună) și este o metodă mai eficientă din punct de vedere al memoriei de stocare a informațiilor despre meșă.

De ce este importantă utilizarea de culori diferite (în gradient sau culori selectate per suprafață) în desenarea obiectelor 3D? Care este avantajul?

   Utilizarea de culori diferite (în gradient sau culori selectate per suprafață) în desenarea obiectelor 3D este importantă de obicei, deoarece unele persoane se confruntă cu afecțiunea numită Daltonism.

Ce reprezintă un gradient de culoare? Cum se obține acesta în OpenGL?

   Un gradient de culoare este un efect creat cu două sau mai multe culori, trecându-se treptat de la una la cealaltă în diferite combinații.
   În OpenGL, un gradient se poate obține prin aplicarea a 2 vertex-uri de culori diferite.

Ce efect are utilizarea unei culori diferite pentru fiecare vertex atunci când desenați o linie sau un triunghi în modul strip?

   Utilizarea culorilor diferite pentru fiecare vertex va determina un gradient de culoare la nivelul vertex-urilor fundamentale: informația de culoare pentru fiecare canal va varia între valorile setate pentru fiecare vertex specificat, ca și pentru punctele desenate intermediare între vertex-uri.


